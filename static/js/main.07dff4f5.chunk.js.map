{"version":3,"sources":["components/ProductCard/ProductCard.module.scss","components/AmountOfProducts/index.js","components/AmountOfProducts/AmountOfProducts.js","components/ProductDescription/index.js","components/ProductDescription/ProductDescription.js","components/ProductCard/ProductCardBorder.js","components/ProductCard/index.js","components/ProductCard/ProductCard.js","catsData.js","App.js","index.js","scss/App.module.scss","components/AmountOfProducts/AmountOfProducts.module.scss","components/ProductDescription/ProductDescription.module.scss"],"names":["module","exports","AmountofProducts","props","amount","mouseBonus","note","declOfNum","number","titles","className","styles","ProductDescription","isDisabled","taste","description","isCardSelected","handleToggleCardSelection","ProductInitialDescription","type","initialDescription","onClick","ProductDisabledDescription","ProductSelectedDescription","descriptionStyle","disabledDescription","ProductCardBorder","isMouseEnter","borderColor","borderColorSelectedHover","borderColorHover","cardBorder","xmlns","version","width","height","id","points","x","y","rx","clipPath","fill","x1","y1","x2","y2","ProductCard","weight","useState","setIsCardSelected","setIsMouseEnter","isMouseLeave","setIsMouseLeave","cardTitle","titleStyle","titleHovered","title","borderStyle","borderDisabled","borderSelected","border","weightStyle","weightSelected","card","main","onMouseEnter","onMouseLeave","brandname","top","String","replace","bottom","catsData","App","wrapper","text","row","map","item","i","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07dff4f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ProductCard_card__4WAOg\",\"cardBorder\":\"ProductCard_cardBorder__2N7z3\",\"borderColor\":\"ProductCard_borderColor__xSIHz\",\"borderColorHover\":\"ProductCard_borderColorHover__DiNiM\",\"borderColorSelectedHover\":\"ProductCard_borderColorSelectedHover__1Zm6i\",\"border\":\"ProductCard_border__3gDVd\",\"weight\":\"ProductCard_weight__16Q0Z\",\"borderDisabled\":\"ProductCard_borderDisabled__144wt\",\"main\":\"ProductCard_main__mfKZA\",\"borderSelected\":\"ProductCard_borderSelected__q0KDB\",\"weightSelected\":\"ProductCard_weightSelected__1eZzD\",\"title\":\"ProductCard_title__tGcp3\",\"titleHovered\":\"ProductCard_titleHovered__3PwEf\",\"brandname\":\"ProductCard_brandname__2bgxO\",\"taste\":\"ProductCard_taste__1DDP9\",\"amount\":\"ProductCard_amount__3LOwB\",\"top\":\"ProductCard_top__1G9N4\",\"bottom\":\"ProductCard_bottom__3FAAW\"};","import AmountofProducts from './AmountOfProducts'\n\nexport default AmountofProducts","import React from 'react'\nimport styles from './AmountOfProducts.module.scss'\nimport PropTypes from 'prop-types'\n\nconst AmountOfProducts = props => {\n    const { amount, mouseBonus, note } = props;\n\n    const declOfNum = (number, titles) => {\n        let cases = [2, 0, 1, 1, 1, 2];\n        return titles[(number % 100 > 4 && number % 100 < 20) ? 2 : cases[(number % 10 < 5) ? number % 10 : 5]];\n    }\n\n    return (\n        <div>\n            <p className={styles.amount}>{amount}\n                <span> {declOfNum(amount, ['порция', 'порции', 'порций'])}</span>\n            </p>\n            <p className={styles.amount}>\n                {mouseBonus >= 2 ? (mouseBonus) : null}\n                <span>\n                    {mouseBonus !== 0 ? declOfNum(mouseBonus, ['мышь', ' мыши', ' мышей']) + ' в подарок' : ''}\n                </span>\n            </p>\n            <p className={styles.amount}><span>{note}</span></p>\n        </div>\n    )\n}\n\nAmountOfProducts.propTypes = {\n    amount: PropTypes.number.isRequired,\n    mouseBonus: PropTypes.number.isRequired,\n    note: PropTypes.string\n}\n\nexport default AmountOfProducts\n","import ProductDescription from './ProductDescription'\n\n\nexport default ProductDescription","import React from 'react'\nimport styles from './ProductDescription.module.scss'\n\n\n\nconst ProductDescription = props => {\n    const { isDisabled, taste, description, isCardSelected, handleToggleCardSelection } = props;\n\n    const ProductInitialDescription = () => {\n        return (\n            <p>\n                Чего сидишь? Порадуй котэ, <button type='button' className={styles.initialDescription} onClick={handleToggleCardSelection}>купи.</button>\n            </p>\n        )\n    }\n\n    const ProductDisabledDescription = () => <p> Печалька с {taste} закончился.</p>\n\n    const ProductSelectedDescription = () => <p>{description}</p>\n\n\n    const descriptionStyle = isDisabled ? styles.disabledDescription : styles.description\n\n    return (\n        <div className={descriptionStyle}>\n\n            {\n                (() => {\n\n                    if (isDisabled) {\n                        return <ProductDisabledDescription {...props} />\n                    } else if (isCardSelected) {\n                        return <ProductSelectedDescription {...props} />\n                    } else {\n                        return <ProductInitialDescription {...props} />\n                    }\n                })()\n            }\n\n        </div>\n    )\n\n}\n\nexport default ProductDescription\n\n","import React from 'react'\nimport styles from './ProductCard.module.scss'\n\nconst ProductCardBorder = ({ isMouseEnter, isCardSelected, isDisabled }) => {\n    const borderColor = isMouseEnter ?\n        isCardSelected ? styles.borderColorSelectedHover : styles.borderColorHover\n        :\n        styles.borderColor\n    return (\n        <div className={styles.cardBorder}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"320\" height=\"480\">\n                <defs>\n                    <clipPath id=\"cp\">\n                        <polygon points=\"45,0 320,0 320,480 0,480 0,48\" />\n                    </clipPath>\n                </defs>\n                <g className={isDisabled ? styles.borderColor : borderColor}>\n                    <rect x=\"2\" y=\"2\" rx=\"14\" clipPath=\"url(#cp)\" width=\"316\" height=\"476\" fill=\"#f2f2f2\" />\n                    <line x1=\"2\" y1=\"48\" x2=\"45\" y2=\"2\" />\n                </g>\n            </svg>\n        </div >\n    )\n}\nexport default ProductCardBorder","import ProductCard from './ProductCard'\n\n\nexport default ProductCard","import React, { useState } from 'react'\nimport styles from './ProductCard.module.scss'\nimport PropTypes from 'prop-types'\nimport AmountOfProducts from '../AmountOfProducts'\nimport ProductDescription from '../ProductDescription'\nimport ProductCardBorder from './ProductCardBorder'\n\n\nconst ProductCard = props => {\n  const { taste, weight, description, amount, mouseBonus, note, isDisabled } = props;\n\n  const [isCardSelected, setIsCardSelected] = useState(false)\n  const [isMouseEnter, setIsMouseEnter] = useState(false)\n  const [isMouseLeave, setIsMouseLeave] = useState(true)\n\n  const handleToggleCardSelection = () => {\n    !isDisabled ? setIsCardSelected(!isCardSelected) : setIsCardSelected(false)\n    setIsMouseLeave(!isMouseLeave)\n    setIsMouseEnter(false)\n  }\n\n  const handleOnMouseEnterCard = () => {\n    if (isCardSelected && isMouseLeave) {\n      setIsMouseEnter(!isMouseLeave)\n    } else {\n      setIsMouseEnter(!isMouseEnter)\n    }\n  }\n\n  const handleOnMouseLeaveCard = () => {\n    if (isCardSelected && isMouseLeave) {\n      setIsMouseEnter(true)\n    } else {\n      setIsMouseEnter(false)\n    }\n  }\n\n  const cardTitle = !isCardSelected ? 'Сказочное заморское яство' : isMouseEnter ? 'Котэ не одобряет?' : 'Сказочное заморское яство'\n  const titleStyle = !isCardSelected ? styles.title : isMouseEnter ? styles.titleHovered : styles.title\n  const borderStyle = !isDisabled ? isCardSelected ? styles.borderSelected : styles.border : styles.borderDisabled\n  const weightStyle = isCardSelected ? styles.weightSelected : styles.weight\n\n  return (\n    <div className={styles.card}>\n      <div className={borderStyle}>\n        <ProductCardBorder isMouseEnter={isMouseEnter} isCardSelected={isCardSelected} isDisabled={isDisabled} />\n        <div className={styles.main} onClick={handleToggleCardSelection} onMouseEnter={handleOnMouseEnterCard} onMouseLeave={handleOnMouseLeaveCard}>\n          <div>\n            <p className={titleStyle}> {cardTitle} </p>\n            <h1 className={styles.brandname}>Нямушка</h1>\n            <p className={styles.taste}> с {taste}</p>\n            <AmountOfProducts amount={amount} mouseBonus={mouseBonus} note={note} />\n          </div>\n          <div className={weightStyle}>\n            <div className={styles.top}>{String(weight).replace('.', ',')}</div>\n            <p className={styles.bottom}>кг</p>\n          </div>\n        </div>\n      </div>\n      <ProductDescription description={description} taste={taste} isDisabled={isDisabled} isCardSelected={isCardSelected} handleToggleCardSelection={handleToggleCardSelection} />\n    </div >\n  )\n}\n\nProductCard.propTypes = {\n  taste: PropTypes.string.isRequired,\n  amount: PropTypes.number.isRequired,\n  mouseBonus: PropTypes.number.isRequired,\n  note: PropTypes.string,\n  weight: PropTypes.number.isRequired,\n  description: PropTypes.string.isRequired\n}\n\nexport default ProductCard","const catsData = [\n  {\n    taste: 'фуа-гра',\n    amount: 10,\n    mouseBonus: 1,\n    note: null,\n    weight: 0.5,\n    description: 'Печень утки разваная с артишоками',\n    isDisabled: false\n  },\n  {\n    taste: 'рыбой',\n    amount: 40,\n    mouseBonus: 2,\n    note: null,\n    weight: 2,\n    description: 'Головы щучьи с чесноком да свежайшая сёмгушка.',\n    isDisabled: false\n  },\n  {\n    taste: 'курой',\n    amount: 100,\n    mouseBonus: 5,\n    note: 'заказчик доволен',\n    weight: 5,\n    description: 'Филе из цыплят с тефтелями в бульоне',\n    isDisabled: true\n  }\n]\n\nexport default catsData","import React from 'react'\nimport styles from './scss/App.module.scss'\nimport ProductCard from './components/ProductCard'\nimport catsData from './catsData'\n\nconst App = () => (\n  <div className={styles.wrapper}>\n    <div className={styles.text}>Ты сегодня покормил кота?</div>\n    <div className={styles.row}>\n      {\n        catsData.map((item, i) => <ProductCard key={i} {...item} />)\n      }\n    </div>\n  </div>\n)\n\nexport default App","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render(<App />, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__c1vn1\",\"text\":\"App_text__11K1s\",\"row\":\"App_row__3bo9B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"amount\":\"AmountOfProducts_amount__5VLJR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProductDescription_description__1qdt7\",\"initialDescription\":\"ProductDescription_initialDescription__2gvAv\",\"disabledDescription\":\"ProductDescription_disabledDescription__3cz-U\"};"],"sourceRoot":""}